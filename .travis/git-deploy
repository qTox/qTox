#!/bin/sh

# Don't display the commands executed.
set -eu +x

if [ -z "$GIT_TOKEN" ]; then
  exit 0
fi

DEPLOY_DIR=toktok.github.io/client/$ENV

git config --global push.default simple
git config --global user.email "deploy@travis-ci.org"
git config --global user.name "Travis Deployer"

git clone https://iphydf:$GIT_TOKEN@github.com/TokTok/toktok.github.io
rm -rf $DEPLOY_DIR
mkdir -p $DEPLOY_DIR

case $ENV in
  linux)
    # Linux: package all libraries and write a startup script.
    ALL_LIBS=`ldd _install/bin/qtox`
    echo "Full list of dependent libraries:"
    echo "$ALL_LIBS"

    LIB_REGEX='(^/usr/lib/x86_64-linux-gnu/[^/]*\.so)'
    LIB_REGEX=$LIB_REGEX'|(/lib/libtox\w\.so)'
    LIB_REGEX=$LIB_REGEX'|(^/lib/x86_64-linux-gnu/libgcrypt\.so)'
    echo "Filtering with regex '$LIB_REGEX'"

    LIBS=`echo "$ALL_LIBS" | awk '{print $3}' | egrep $LIB_REGEX`
    echo "Packaged libraries:"
    echo "$LIBS"

    PKG_DIR=qtox-1.5.1
    mkdir -p $PKG_DIR/bin
    mkdir -p $PKG_DIR/lib

    cp _install/bin/qtox $PKG_DIR/bin/
    cp $LIBS $PKG_DIR/lib/

    echo '#!/bin/bash'                                                  >  $PKG_DIR/qtox
    echo 'THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"' >> $PKG_DIR/qtox
    echo 'export LD_LIBRARY_PATH="$THIS_DIR/lib"'                       >> $PKG_DIR/qtox
    echo 'chmod +x "$THIS_DIR/bin/qtox"'                                >> $PKG_DIR/qtox
    echo 'exec "$THIS_DIR/bin/qtox" "$@"'                               >> $PKG_DIR/qtox
    chmod +x $PKG_DIR/qtox
    tar zcf $DEPLOY_DIR/$PKG_DIR.tar.gz $PKG_DIR
    gzip < $PKG_DIR/bin/qtox > $DEPLOY_DIR/qtox.gz
    ;;
  osx)
    # OSX: deploy the dmg image.
    cp _build/qtox.dmg $DEPLOY_DIR
    ;;
  windows)
    # Windows: make a zip archive.
    mv _install/bin/qtox.exe .
    zip $DEPLOY_DIR/qtox-$ARCH.zip qtox.exe
    ;;
  *)
    echo "Unknown ENV: '$ENV'"
    exit 1
    ;;
esac

cd toktok.github.io
git add .
git commit -a -m"Upload new $ENV binaries." --amend
git push --force
